{"version":3,"sources":["src/js/Map.js","src/js/Marker.js","src/js/index.js"],"names":["defaultCenter","Map","google","_ref","state","mapContainer","ReactDOM","findDOMNode","this","createMap","props","options","userOptions","arguments","length","undefined","defaultOptions","maps","MapTypeId","ROADMAP","Object","assign","map","setState","children","React","Children","c","cloneElement","_this2","style","width","height","createElement","renderChildren","Component","propTypes","PropTypes","object","isRequired","Marker","prevProps","log","mapChanged","positionChanged","pos","position","_props","listeners","renderMarker","destroyMarker","marker","setMap","LatLng","lat","lng","pref","keys","forEach","l","addListener","index"],"mappings":"w6BAGMA,OACC,eACA,SAGcC,EAAAA,SAAAA,oBACLC,GAAUC,EAAVD,2FAEPE,oBAEE,wEAKDC,GAAeC,EAASC,YAAYC,WACrCC,UAAUD,KAAKE,MAAMR,OAAQM,KAAKE,MAAMC,QAASN,qCAI9CH,MAAQU,GAAgCC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,MAAAA,UAAA,GAAdR,EAAcQ,UAAA,GAC1CG,UACIhB,YACGE,EAAOe,KAAKC,UAAUC,aAC3B,gBACO,UACJ,IAELR,EAAUS,OAAOC,UAAWL,EAAgBJ,GAG5CU,EAAM,GAAIpB,GAAOe,KAAKhB,IAAII,EAAcM,QACzCY,UAAWD,IAAAA,wDAKRE,EAAahB,KAAKE,MAAlBc,eACHA,GAIEC,EAAMC,SAASJ,IAAIE,EAAU,SAAAG,SAC3BF,GAAMG,aAAaD,OACnBE,EAAKzB,MAAMkB,WACRO,EAAKnB,MAAMR,WANd,yCAYH4B,IAAUC,MAAO,OAAQC,OAAQ,cAErCP,GAAAQ,qBAAKH,MAAOA,QACJI,yBAjDmBT,EAAMU,UAwDvClC,GAAImC,kBACMX,EAAMY,UAAUC,OAAOC,mBACtBd,EAAMY,UAAUC,WChENE,GAAAA,SAAAA,mKAEAC,WACTC,IAAI,OAAQlC,KAAKE,MAAMY,IAAKmB,EAAUnB,QACxCqB,GAAanC,KAAKE,MAAMY,MAAQmB,EAAUnB,IAC1CsB,EAAkBpC,KAAKE,MAAMmC,MAAQJ,EAAUK,YAEjDH,GAAcC,EAAiB,OACOpC,KAAKE,MAArCY,EADyByB,EACzBzB,IAAKpB,EADoB6C,EACpB7C,OAAQ2C,EADYE,EACZF,IAAKG,EADOD,EACPC,eACrBC,aAAa3B,EAAKpB,EAAQ2C,EAAKG,wDAMjCE,wDAID1C,KAAK2C,aAAeA,OAAOC,OAAO,2CAG3B9B,EAAKpB,EAAQ2C,cAAKG,EAAgBnC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,MAAAA,UAAA,GACvCiC,EAAW,GAAI5C,GAAOe,KAAKoC,OAAOR,EAAIS,IAAKT,EAAIU,KAC/CC,GAASlC,IAAAA,EAAKwB,SAAAA,QACfK,OAAS,GAAIjD,GAAOe,KAAKuB,OAAOgB,UAE9BC,KAAKT,GAAWU,QAAQ,SAAAC,KACxBR,OAAOS,YAAYD,EAAGX,EAAUW,6CAKhC,aAjCyBlC,EAAMU,UAqC1CK,GAAOJ,eACAX,EAAMY,UAAUC,OAAOC,eACvBd,EAAMY,UAAUC,cACbb,EAAMY,UAAUC,OAAOC,qBACpBd,EAAMY,UAAUC,OCzC7B,IAAAuB","file":"index.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst defaultCenter = {\n  lat: 51.496672,\n  lng: -0.175175,\n};\n\nexport default class Map extends React.Component {\n  constructor({ google }) {\n    super();\n    this.state = {\n      google,\n      map: null,\n    };\n  }\n\n  componentDidMount() {\n    const mapContainer = ReactDOM.findDOMNode(this);\n    this.createMap(this.props.google, this.props.options, mapContainer);\n  }\n\n  // Actually constructs the map\n  createMap(google, userOptions = {}, mapContainer) {\n    const defaultOptions = {\n      center: defaultCenter,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      zoom: 14,\n      scrollwheel: false,\n      maxZoom: 17,\n    };\n    const options = Object.assign({}, defaultOptions, userOptions);\n\n    // Create map\n    const map = new google.maps.Map(mapContainer, options);\n    this.setState({ map });\n  }\n\n  // Creates markers\n  renderChildren() {\n    const { children } = this.props;\n    if (!children) {\n      return null;\n    }\n\n    return React.Children.map(children, c => {\n      return React.cloneElement(c, {\n        map: this.state.map,\n        google: this.props.google,\n      });\n    });\n  }\n\n  render() {\n    const style = { width: '100%', height: '100%' };\n    return (\n      <div style={style}>\n        {this.renderChildren()}\n      </div>\n    );\n  }\n}\n\n\nMap.propTypes = {\n  google: React.PropTypes.object.isRequired,\n  options: React.PropTypes.object,\n};\n","import React from 'react';\n\nexport default class Marker extends React.Component {\n\n  componentDidUpdate(prevProps) {\n    console.log('Maps', this.props.map, prevProps.map);\n    const mapChanged = this.props.map !== prevProps.map;\n    const positionChanged = this.props.pos !== prevProps.position;\n\n    if (mapChanged || positionChanged) {\n      const { map, google, pos, listeners } = this.props;\n      this.renderMarker(map, google, pos, listeners);\n    }\n  }\n\n  // Destroy marker\n  componentWillUnmount() {\n    this.destroyMarker();\n  }\n\n  destroyMarker() {\n    if (this.marker) { this.marker.setMap(null); }\n  }\n\n  renderMarker(map, google, pos, listeners = {}) {\n    const position = new google.maps.LatLng(pos.lat, pos.lng);\n    const pref = { map, position };\n    this.marker = new google.maps.Marker(pref);\n\n    Object.keys(listeners).forEach(l => {\n      this.marker.addListener(l, listeners[l]);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nMarker.propTypes = {\n  pos: React.PropTypes.object.isRequired,\n  map: React.PropTypes.object,\n  google: React.PropTypes.object.isRequired,\n  listeners: React.PropTypes.object,\n};\n","import Map from './Map';\nimport Marker from './Marker';\nexport default {\n  Map,\n  Marker,\n};\n"],"sourceRoot":"/source/"}